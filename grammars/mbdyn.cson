'scopeName': 'source.mbdyn'
'name': 'MBDyn'
'fileTypes': ['mbd', 'mbdyn', 'mdl', 'set', 'ref', 'nod', 'elm']

patterns: [
	{
		include: '#comments'
	}
	{
		include: '#numbers'
	}
	{
		include: '#strings'
	}
	{
		include: '#misc'
	}
	{
		include: '#invalid'
	}
	{
		include: '#constants'
	}
	{
		include: '#storage'
	}
	{
		include: '#keywords'
	}
	{
		include: '#entity'
	}
]

repository:
	comments:
		patterns: [
			{
				begin: '\#'
				end: '\\n'
				name: 'comment.line.pound.mbdyn'
			}
			{
				begin: '/\\*'
				beginCaptures:
					'1':
						name: 'punctuation.definition.comment.begin.mbdyn'
				end: '\\*/'
				endCaptures:
					'1':
						name: 'punctuation.definition.comment.end.mbdyn'
				name: 'comment.block.mbdyn'
			}
		]
	numbers:
		patterns: [
			{
				match: '\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((E|e)(\\+|-)?[0-9]+)?\\b'
				name: 'constant.numeric.mbdyn'
			}
		]

	strings:
		patterns: [
			{
				begin: '(?<![\\w\\]\)])"'
				beginCaptures:
					'1':
						name: 'punctuation.definition.string.begin.mbdyn'
				end: '"(?!")'
				endCaptures:
					'1':
						name: 'punctuation.definition.string.end.mbdyn'
				name: 'string.quoted.single.mbdyn'
				patterns: [
					{
						match: '""'
						name: 'constant.character.escape.mbdyn'
					}
				]
			}
		]
	keywords:
		patterns: [
			{
				match: '\\b(include|initial time|final time|time step|min time step|max time ste|method|threads|eigenanalysis|abort after|tolerance|max iterations|derivatives tolerance|derivatives max iterations|derivatives coefficient|dummy steps tolerance|dummy steps max iterations|dummy steps number|dummy steps ratio|nonlinear solver|linear solver|output results|output|default output|default aerodynamic output|default beam output|default scale|model|rigid body kinematics|loadable path|output frequency|output meter|output precision|print|real time|use|initial stiffness|omega rotates|title|structural nodes|electric nodes|hydraulic nodes|parameter nodes|thermal nodes|rigid bodies|aerodynamic elements|aeromodals|automatic structural elements|beams|bulk elements|electric bulk elements|electric elements|external elements|genels|hydraulic elements|loadable elements|output elements|induced velocity elements|joints|forces|aerodynamic elements|reference|template|drive caller|drivers|force|air properties|gravity|c81 data|drive caller|template drive caller|module load|print symbol table|remark|file)\\b(\:)'

				captures:
					'1':
						name: 'keyword.control.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
			}
			{
				match: '\\b(reference),'
				captures:
					'1':
						name: 'keyword.operator.mbdyn'
					'2':
						name: 'punctuation.separator.mbdyn'
			}
			{
				match: '\\b(modify residual test|in assembly|skip initial joint assembly|select timeout|gravity|air properties|use lapack)\\b'
				name: 'keyword.control.mbdyn'
			}
			{
				match: '\\b(eye|null|euler|euler123|euler313|euler321|vector|matr|orientation vector|orientation matrix|anba|sym|diag|skew|guess|position|orientation|position orientation|rotation orientation|gust)\\b'
				name: 'keyword.other.mbdyn'
			}
		]
	storage:
			patterns: [
				{
					match: '\\b(integer|real|string|bool|Mat3x3|Mat6xN|Vec3|OrientationMatrix|ConstitutiveLaw|DriveCaller|NodeDof|ScalarValue|Shape|TplDriveCaller|HydraulicFluid)\\b'
					name: 'storage.type.mbdyn'
				}
				{
					match: '\\b(set|ifndef|const|setenv|1D|3D|6D|Entity)\\b'
					name: 'storage.modifier.mbdyn'
				}
			]
	constants:
		patterns: [
			{
				match: '\\b(TRUE|FALSE)\\b'
				name: 'constant.language.mbdyn'
			}
			{
				match: '\\b(pi|deg2rad|Time|TimeStep|Step|Var|INT_MAX|INT_MIN|RAND_MAX|REAL_MAX|REAL_MIN|in2m|m2in|mm2in|ft2m|m2ft|lb2kg|kg2lb|deg2rad|rad2deg|slug2kg|kg2slug)\\b'
				name: 'constant.numeric.mbdyn'
			}
		]
	invalid:
		patterns: [
			{
				match: '\\b(hinge|y12|meschach|harwell|taucs|watson|solver|rotor|deformable displacement hinge|distance with offsets|plane displacement pin|plane displacement|plane hinge|plane pin|universal hinge|universal pin|universal rotation|parameter|kinematic)\\b'
				name: 'invalid.deprecated.mbdyn'
			}
			{
				match: '\\b(make restart file)\\b\:'
				name: 'invalid.depracated.mbdyn'
			}
		]
	entity:
		patterns: [
			{
				begin: '\\b(begin)\\b\: *\\b(data)\\b\;'
				beginCaptures:
					'1':
						name: 'keyword.operator.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
					'3':
						name: 'entity.name.section.data.mbdyn'
					'4':
						name: 'punctuation.terminator.mbdyn'
				end: '\\b(end)\\b\: *\\b(data)\\b\;'
				endCaptures:
					'1':
						name: 'keyword.operator.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
					'3':
						name: 'entity.name.section.data.mbdyn'
					'4':
						name: 'punctuation.terminator.mbdyn'
				contentName: 'source.mbdyn.section.data'
				patterns: [
					{
						include: '$self'
					}
					{
						match: '\\b(problem)\\b(\:)'
						captures:
							'1':
								'name': 'keyword.control.mbdyn'
							'2':
								'name:': 'punctuation.definition.mbdyn'
					}
					{
						match: '\\b(initial value|inverse dynamics)\\b\;'
						captures:
							'1':
								'name': 'entity.name.type.mbdyn.problem'
							'2':
								'name': 'punctuation.terminator.mbdyn'
					}
				]
			}
			{
				begin: '\\b(begin)\\b\: *\\b(initial value)\\b\;'
				beginCaptures:
					'1':
						name: 'keyword.operator.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
					'3':
						name: 'entity.name.section.initialvalue.mbdyn'
					'4':
						name: 'punctuation.terminator.mbdyn'
				end: '\\b(end)\\b\: *\\b(initial value)\\b\;'
				endCaptures:
					'1':
						name: 'keyword.operator.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
					'3':
						name: 'entity.name.section.initialvalue.mbdyn'
					'4':
						name: 'punctuation.terminator.mbdyn'
				contentName: 'source.mbdyn.section.initialvalue'
				patterns: [
					{
						include: '$self'
					}
				]
			}
			{
				begin: '\\b(strategy)\\b\:'
				beginCaptures:
					'1':
						name: 'keyword.control.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
				end: '\;'
				endCaptures:
					'1':
						name: 'punctuation.terminator.mbdyn'
				contentName: 'source.mbdyn.definition.strategy'
				patterns: [
					{
						include: '$self'
					}
				]
			}
			{
				begin: '\\b(constitutive law)\\b\:'
				beginCaptures:
					'1':
						name: 'keyword.control.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
				end: '\;'
				endCaptures:
					'1':
						name: 'punctuation.terminator.mbdyn'
				contentName: 'source.mbdyn.definition.constlaw'
				patterns: [
					{
						match: '\\b(linear elastic isotropic|linear elastic generic|linear elastic axial torsion coupling|linear elastic)\\b'
						name: 'entity.name.type.mbdyn.constlaw'
					}
					{
					include: '$self'
					}
				]
			}
			{
				begin: '\\b(hydraulic fluid)\\b\:'
				beginCaptures:
					'1':
						name: 'keyword.control.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
				end: '\;'
				endCaptures:
					'1':
						name: 'punctuation.terminator.mbdyn'
				contentName: 'source.mbdyn.definition.hydraulic-fluid'
				patterns: [
					{
						match: '\\b(exponential|super|linear thermal compressible|linear compressible|incompressible)\\b'
						name: 'entity.name.type.mbdyn.hydraulicfluid'
					}
					{
						match: '\\b(density|viscosity|pressure|temperature|sound celerity)\\b(?![^\\<]*\\>)'
						name: 'keyword.other.mbdyn'
					}
					{
					include: '$self'
					}
				]
			}
			{
				begin: '\\b(begin)\\b\: *\\b(control data)\\b\;'
				beginCaptures:
					'1':
						name: 'keyword.operator.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
					'3':
						name: 'entity.name.section.nodes.mbdyn'
					'4':
						name: 'punctuation.terminator.mbdyn'
				end: '\\b(end)\\b\: *\\b(control data)\\b\;'
				endCaptures:
					'1':
						name: 'keyword.operator.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
					'3':
						name: 'entity.name.section.controldata.mbdyn'
					'4':
						name: 'punctuation.terminator.mbdyn'
				contentName: 'source.mbdyn.section.controldata'
				patterns: [
					{
						include: '$self'
					}
				]
			}
			{
				begin: '\\b(begin)\\b\: *\\b(nodes)\\b\;'
				beginCaptures:
					'1':
						name: 'keyword.operator.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
					'3':
						name: 'entity.name.section.nodes.mbdyn'
					'4':
						name: 'punctuation.terminator.mbdyn'
				end: '\\b(end)\\b\: *\\b(nodes)\\b\;'
				endCaptures:
					'1':
						name: 'keyword.operator.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
					'3':
						name: 'entity.name.section.nodes.mbdyn'
					'4':
						name: 'punctuation.terminator.mbdyn'
				contentName: 'source.mbdyn.section.nodes'
				patterns: [
					{
						begin: '\\b(output)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.nodes.output'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.section.nodes.output'
						patterns: [
							{
								include: '$self'
							}
						]
					}
					{
						include: '$self'
					}
				]
			}
			{
				begin: '\\b(begin)\\b\: *\\b(drivers)\\b\;'
				beginCaptures:
					'1':
						name: 'keyword.operator.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
					'3':
						name: 'entity.name.section.mbdyn.drivers'
					'4':
						name: 'punctuation.terminator.mbdyn'
				end: '\\b(end)\\b\: *\\b(drivers)\\b\;'
				endCaptures:
					'1':
						name: 'keyword.operator.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
					'3':
						name: 'entity.name.section.drivers.mbdyn'
					'4':
						name: 'punctuation.terminator.mbdyn'
				contentName: 'source.mbdyn.section.drivers'
				patterns: [
					{
						include: '$self'
					}
				]
			}
			{
				begin: '\\b(reference)\\b\:'
				beginCaptures:
					'1':
						name: 'entity.name.type.mbdyn.reference'
					'2':
						name: 'punctuation.definition.mbdyn'
				end: '\;'
				endCaptures:
					'1':
						name: 'punctuation.terminator.mbdyn'
				contentName: 'source.mbdyn.reference'
				patterns: [
					{
						match: '\\b(name|Denavit Hartenberg|global)\\b'
						name: 'keyword.other.mbdyn'
					}
					{
						include: '$self'
					}
				]
			}
			{
				begin: '\\b(begin)\\b\: *\\b(elements)\\b\;'
				beginCaptures:
					'1':
						name: 'keyword.operator.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
					'3':
						name: 'entity.name.section.elements.mbdyn'
					'4':
						name: 'punctuation.terminator.mbdyn'
				end: '\\b(end)\\b\: *\\b(elements)\\b\;'
				endCaptures:
					'1':
						name: 'keyword.operator.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
					'3':
						name: 'entity.name.section.elements.mbdyn'
					'4':
						name: 'punctuation.terminator.mbdyn'
				contentName: 'source.mbdyn.section.elements'
				patterns: [
					{
						begin: '\\b(air properties)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.elements.airprops'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.airprops'
						patterns: [
							{
								match: '\\b(reference position|reference velocity|reference orientation|reference elevation|surface roughness length)\\b'
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(aerodynamic body|aerodynamic beam2|aerodynamic beam3)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.aeroelements'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.aero'
						patterns: [
							{
								match: '\\b(user defined|induced velocity|passive|tip loss|control|naca 0012|rae 9671|theodorsen|c81|unsteady|bielawa|jacobian|yes|no|std|gauss|node)\\b'
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(aeromodal)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.aeromodal'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: ';'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.aeromodal'
						patterns: [
							{
								match: '\\b(rigid|gust)\\b'
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(generic aerodynamic force)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.aeroelement'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: ';'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.genaeroforce'
						patterns: [
							{
								match: '\\b(reference surface|reference length|alpha first|file)\\b'
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(induced velocity)\\b\:'
						beginCaptures:
							'1':
							  name: 'entity.name.type.mbdyn.aeroelement'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.inducedvel'
						patterns: [
							{
								match: '\\b(induced velocity|no|uniform|glauert|mangler|dynamic inflow|rotor|type|ground|delay|max iterations|tolerance|eta|correction)\\b'
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(stream output)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.outelements'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.streamoutput'
						patterns: [
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(body)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.element'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: ';'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.body'
						patterns: [
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(beam3)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.element'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: ';'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.beam3'
						patterns: [
							{
								match: '\\b(piezoelectric actuator|same|from nodes)\\b'
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(beam2)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.element'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.beam2'
						patterns: [
							{
								match: '\\b(piezoelectric actuator|same|from nodes)\\b'
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(bulk)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.element'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.bulk'
						patterns: [
							{
								match: '\\b(stiffness spring)\\b'
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(electric)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.element.electric'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.electric'
						patterns: [
							{
								match: '\\b(translational|rotational|position)\\b'
								name: 'keyword.other.mbdyn'
							}
							{
								begin: '\\b(discrete control)\\b\,'
								beginCaptures:
									'1':
										name: 'entity.name.type.mbdyn.element'
									'2':
										name: 'punctuation.definition.mbdyn'
								end: '\;'
								endCaptures:
									'1':
										name: 'punctuation.terminator.mbdyn'
								contentName: 'source.mbdyn.element.electric.dcontrol'
								patterns: [
									{
										match: '\\b(fir|outputs|scale|inputs|node dof|drive|control|identification|adaptive control|arx|armax|file|forgettingfactor|dynamic|excitation|periodic|gpc|prediction weights|control weights|deadbeat|trigger|desired output)\\b'
										name: 'keyword.other.mbdyn'
									}
									{
										include: '$self'
									}
								]
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(couple)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.element'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.couple'
						patterns: [
							{
								match: '\\b(absolute|follower|internal)\\b'
								name: 'entity.name.type.mbdyn.force'
							}
							{
								match: '\\b(abstract|internal|absolute|follower|total|modal|external|structural|mapping|position|force|moment|orientation)\\b'
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(force)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.element'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.force'
						patterns: [
							{
								match: '\\b(abstract|absolute|absolute|follower|internal|total|total|modal|external structural|external structural|external modal|external modal|mapping)\\b'
								name: 'entity.name.type.mbdyn.force'
							}
							{
								match: '\\b(internal|absolute|follower|total|yes|no|sorted|reference|node|orientation|matrix|vector|euler|123|accelerations|forces|rotate|offset|echo|precision|surface|output|order|basenode|weight|inf|stop|mapped points number|from file|full|sparse|mapping file|threshold|mapped labels file|resultant|list|force|moment|none|use|labels|type|rigid|body|all|nodes number|modes number)\\b'
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(genel)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.element'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.genel'
						patterns: [
							{
								match: '\\b(clamp|distance|cross spring support|spring support|mass|scalar filter|state space SISO|state space MIMO|swashplate|rotor trim|spring)(?![^\\<]*\\>)\\b'
								name: 'entity.name.type.mbdyn.genel'
							}
							{
								match: '\\b(node dof|drive|canonical form|controllable|observable|gain|balance|yes|no|matrix E|matrix A|matrix B|matrix C|matrix D|value|derivative|limits|trigger|rotor|generic|reference node)(?![^\\<]*\\>)\\b'
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(gravity)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.element'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.gravity'
						patterns: [
							{
								match: '\\b(uniform|central)\\b(?![^\\<]*\\>)'
								name: 'entity.name.type.mbdyn.gravity'
							}
							{
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(hydraulic)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.element'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.hydraulic'
						patterns: [
							{
								match: '\\b(exponential|super|linear thermal compressible|linear compressible|incompressible)\\b'
								name: 'entity.name.type.mbdyn.hydraulicfluid'
							}
							{
								match: '\\b(density|viscosity|pressure|temperature|sound celerity)\\b(?![^\\<]*\\>)'
								name: 'keyword.other.mbdyn'
							}
							{
								match: '\\b(actuator|three way minor loss|minor loss|dynamic control valve|pressure flow control valve|control valve|pressure valve|flow valve|orifice|accumulator|tank|dynamic pipe|pipe|imposed pressure|imposed flow)(?![^\\<]*\\>)\\b'
								name: 'entity.name.type.mbdyn.hydraulic'
							}
							{
								match: '\\b(direction|fluid|same|loss|reynolds|initial value|turbolent)(?![^\\<]*\\>)\\b'
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(joint regularization)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.element'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.jointregularization'
						patterns: [
							{
								match: '\\b(tikhonov)\\b'
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						begin: '\\b(joint)\\b\:'
						beginCaptures:
							'1':
								name: 'entity.name.type.mbdyn.element'
							'2':
								name: 'punctuation.definition.mbdyn'
						end: '\;'
						endCaptures:
							'1':
								name: 'punctuation.terminator.mbdyn'
						contentName: 'source.mbdyn.element.joint'
						patterns: [
							{
								match: '\\b(clamp|distance|angular acceleration|angular velocity|axial rotation|beam slider|brake|cardano hinge|cardano pin|cardano rotation|deformable axial joint|deformable displacement joint|deformable hinge|deformable joint|drive displacement pin|drive displacement|drive hinge|gimbal rotation|imposed displacement|imposed displacement pin|in line|in plane|invariant deformable displacement|invariant deformable hinge|kinematic|linear acceleration|linear velocity|modal|plane displacement|plane displacement pin|prismatic|revolute hinge|revolute pin|revolute rotation|rod|rod with offsets|spherical hinge|spherical pin|total equation|total reaction|total joint|total pin joint|viscous body)\\b(?![^\\<]*\\>)'
								name: 'entity.name.type.mbdyn.joints'
							}
							{
								match: '\\b(position orientation|rotation orientation|position constraint|orientation constraint|inactive|active|angular velocity|velocity|position|orientation vector|orientation matrix|orientation description|orientation|initial theta|from nodes|type|spherical|classic|spline|same|friction|preload)\\b(?![^\\<]*\\>)'
								name: 'keyword.other.mbdyn'
							}
							{
								include: '$self'
							}
						]
					}
					{
						include: '$self'
					}
				]
			}
			{
				match: '\\b(ms|hope|third order|bdf|implicit euler)\\b'
				name: 'entity.name.type.mbdyn.method'
			}
			{
				match: '\\b(naive|umfpack|klu|lapack|superlu)\\b'
				name: 'entity.name.type.mbdyn.linsolver'
			}
			{
				match: '\\b(newton raphson|line search|matrix free)\\b'
				name: 'entity.name.type.mbdyn.nonlinsolver'
			}
			{
				match: '\\b(residual|solution|jacobian matrix|messages|counter|bailout|matrix condition number|solver condition number|none)\\b'
				name: 'entity.name.type.mbdyn.output'
			}
			{
				match: '\\b(dof stats|dof description|equation description|element connection|node connection|all|none)\\b'
				name: 'entity.name.type.mbdyn.print'
			}
			{
				# Structural node definition
				match: '\\b(abstract|electric|hydraulic|structural|thermal)\\b(\:)'
				captures:
					'1':
						name: 'entity.name.type.mbdyn.nodes'
					'2':
						name: 'punctuation.definition.mbdyn'
			}
			{
				match: '\\b(automatic structural|beam2|beam3|body|couple|gravity|joint|joint regularization|stiffness spring)\\b(\:)'
				captures:
					'1':
						name: 'entity.name.type.mbdyn.strelements'
					'2':
						name: 'punctuation.definition.mbdyn'
			}
			{
				match: '\\b(shell4eas|shell4easans|membrane4eas)\\b(\:)'
				captures:
					'1':
						name: 'entity.name.type.mbdyn.platelements'
					'2':
						name: 'punctuation.definition.mbdyn'
			}
			{
				match: '\\b(loadable|user defined)\\b(\:)'
				captures:
					'1':
						name: 'entity.name.type.mbdyn.userelements'
					'2':
						name: 'punctuation.definition.mbdyn'
			}
			{
				match: '\\b(aerodynamic beam2|aerodynamic beam3|aerodynamic body|aeromodal|aircraft instruments|air properties|induced velocity|generic aerodynamic force)\\b(\:)'
				captures:
					'1':
						name: 'entity.name.type.mbdyn.aeroelements'
					'2':
						name: 'punctuation.definition.mbdyn'
			}
			{
				match: '\\b(accelerometer|displacement|motor|discrete control)\\b(\:)'
				captures:
					'1':
						name: 'entity.name.type.mbdyn.elecelements'
					'2':
						name: 'punctuation.definition.mbdyn'
			}
			{
				match: '\\b(hydraulic|actuator|minor loss|three way minor loss|control valve|dynamic control valve|pressure flow control valve|pressure valve|flow valve|orifice|accumulator|tank|pipe|dynamic pipe)\\b(\:)'
				captures:
					'1':
						name: 'entity.name.type.mbdyn.hydrelements'
					'2':
						name: 'punctuation.definition.mbdyn'
			}
			{
				match: '\\b(driven)\\b(\:)'
				captures:
					'1':
						name: 'entity.name.type.mbdyn.driven'
					'2':
						name: 'punctuation.definition.mbdyn'
			}
			{
				match: '\\b(RTAI output|stream output|stream motion output|inertia)\\b(\:)'
				captures:
					'1':
						name: 'entity.name.type.mbdyn.outelements'
					'2':
						name: 'punctuation.definition.mbdyn'
			}
			{
				match: '\\b(bind|bulk|force|genel|loadable|user defined)\\b(\:)'
				captures:
					'1':
						name: 'entity.name.type.mbdyn.genelements'
					'2':
						name: 'punctuation.definition.mbdyn'
			}
			{
				match: '\\b(static|dynamic|modal|dummy\\b)(?![^\\<]*\\>)'
				name: 'entity.name.type.mbdyn.strnode'
			}
			{
				match: '\\b(array|closest next|cosine|cubic|direct|dof|double ramp|double step|drive|element|exponential|ginac|file|fourier series|frequency sweep|meter|mult|node|parabolic|periodic|piecewise linear|ramp|random|sample and hold|scalar function|sine|step|string|tanh|time|timestep|unit|linear)\\b(?![^\\<]*\\>)'
				name: 'entity.name.type.mbdyn.drive'
			}
			{
				match: '\\b(fixed step|variable step|RTAI input|stream|socket)\\b'
				name: 'entity.name.type.mbdyn.driver'
			}
			{
				match: '\\b(abs|acos|acosh|actan|actan2|actanh|asinh|atanh|asin|atan|atan2|ceil|copysign|cos|cosh|ctan|ctanh|exp|floor|in_ee|in_el|in_le|in_ll|log|log10|min|max|par|print|ramp|rand|random|round|seed|sign|sin|sinh|sprintf|sqrt|sramp|step|stop|tan|tanh)\\b'
				name: 'entity.name.function.mbdyn'
			}
			{
				match: '\\b(sf|node|element)\\b(\:\:)'
				captures:
					'1':
						name: 'entity.name.function.mbdyn'
					'2':
						name: 'punctuation.definition.mbdyn'
			}
			{
				match: '\\b(position|position2|xposition|yposition|zposition|distance|distance2|xdistance|ydistance|zdistance|xunitvec|yunitvec|zunitvec|angle|xangle|yangle|zangle|angelrel|xanglerel|yanglerel|zanglerel|velocity|velocity2|xvelocity|yvelocity|zvelocity|vrel|vrel2|xvrel|yvrel|zvrel|angvel|angvel2|xangvel|yangvel|zangvel|angvrel|angvrel2|xangvrel|yangvrel|zangvrel|current|drive)\\b(?![^\\<]*\\>)'
				name: 'entity.name.function.mbdyn'
			}
		]
